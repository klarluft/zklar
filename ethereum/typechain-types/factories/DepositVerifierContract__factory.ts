/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  DepositVerifierContract,
  DepositVerifierContractInterface,
} from "../DepositVerifierContract";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "X",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "Y",
                type: "uint256",
              },
            ],
            internalType: "struct Pairing.G1Point",
            name: "a",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256[2]",
                name: "X",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2]",
                name: "Y",
                type: "uint256[2]",
              },
            ],
            internalType: "struct Pairing.G2Point",
            name: "b",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "X",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "Y",
                type: "uint256",
              },
            ],
            internalType: "struct Pairing.G1Point",
            name: "c",
            type: "tuple",
          },
        ],
        internalType: "struct DepositVerifierContract.Proof",
        name: "proof",
        type: "tuple",
      },
      {
        internalType: "uint256[3]",
        name: "input",
        type: "uint256[3]",
      },
    ],
    name: "verifyTx",
    outputs: [
      {
        internalType: "bool",
        name: "r",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611c58806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80630f9c5d4914610030575b600080fd5b61004a60048036038101906100459190611925565b610060565b6040516100579190611972565b60405180910390f35b600080600367ffffffffffffffff8111156100a4577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280602002602001820160405280156100d25781602001602082028036833780820191505090505b50905060005b60038110156101775783816003811061011a577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020020151828281518110610158577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001018181525050808061016f90611b04565b9150506100d8565b50600061018482866101a0565b141561019457600191505061019a565b60009150505b92915050565b6000807f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001905060006101d06103cf565b9050806080015151600186516101e69190611a0a565b146101f057600080fd5b60006040518060400160405280600081526020016000815250905060005b865181101561031b5783878281518110610251577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101511061026357600080fd5b61030682610301856080015160018561027c9190611a0a565b815181106102b3577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101518a85815181106102f4577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151610981565b610a9a565b9150808061031390611b04565b91505061020e565b5061036b81836080015160008151811061035e577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151610a9a565b90506103b18560000151866020015161038384610bff565b85604001516103958a60400151610bff565b87606001516103a78960000151610bff565b8960200151610ca4565b6103c157600193505050506103c9565b600093505050505b92915050565b6103d76115f4565b60405180604001604052807f237b37adbd9820bbac93f11dcff164719b678d8ac01ebe6b05b7d808bab3de9081526020017f13f8e109c7800027bffbac812a8ae0b36a329ca5d2a75e12e31fcc966504560e8152508160000181905250604051806040016040528060405180604001604052807f204d069a6990a0150ccd9c06d92ee0778b0d77ca70790b72adee7654e14db06e81526020017f015a17645bc4f94497848fd8039d338be7c27efd5d7631f29489cfbe0aef72df815250815260200160405180604001604052807f23c888d9efb3d6fda29e370a5008d731510540c45b05b4b46e0d9e7c80c216b081526020017f0d04b9c225f71527a5352e38abe9c26e3838c96d63a32e4b2f4372fd310c81ad8152508152508160200181905250604051806040016040528060405180604001604052807f0cf62a7aadedffd8b78873d76dc247af839d16c2a405f215cb4f7b356306e74581526020017f256b61652b398821741e0483cc1a705da9deaac9f2ad2eb4214966543473626d815250815260200160405180604001604052807f0d104ed5527415205f3dcf6c8b197cf9e9fa54eae44794c091e63f7e202110d481526020017f0bc56eed002245cfea3d94d6478234cea13b2ae1cd21488c6a273ec878fc4e7a8152508152508160400181905250604051806040016040528060405180604001604052807f0884fb23505d3cb3583e49badaa93f5bfa0f145978ceb321f4bbccd782d0b63081526020017f1b13bd78c741b99d1b2ed23bd056d31e1dac0554a473bfeebc082f062df54f36815250815260200160405180604001604052807f10deab658ccc17131c8667f07424d44fb5334c8c225ba096277b070adefbf90281526020017f1597f9c238b8563b0ee6f811aade7147de6f9421eda7306c7816fefca720e9728152508152508160600181905250600467ffffffffffffffff8111156106c4577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280602002602001820160405280156106fd57816020015b6106ea61163b565b8152602001906001900390816106e25790505b50816080018190525060405180604001604052807f208bd91e63e4a7e6793b117cbadd2b1e69417926473c74a8991537cf30387dc881526020017f27157348b9c2d3d208892330bc8444c6e59791d463ba568213ed7fff5faa553b8152508160800151600081518110610799577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001018190525060405180604001604052807f2ab5431c707c22a17b579f7f072c29e162c3beec4ae7115b02222b757daf444c81526020017f01041023ee0825ea413b37998c501869e9404d81fa0da7622fe3f9935347f9578152508160800151600181518110610837577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001018190525060405180604001604052807f07185ac16c294792dcb5512b5720dc4f3bcc65b8bbb85a28819b4525d57bdb2481526020017f03b4895b009c847f9c7ba124426480dd47d77e89e4e6219bd2c0872d775c797c81525081608001516002815181106108d5577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001018190525060405180604001604052807f1283816ca6fcc17e4990320291e23f077f924d218ee5520f0f7c96dd4a7b8ad981526020017f03fb8e2bcea2f6298a2f479e0aec0b1cdafe9af3d23c4e81c2aaea965417efb98152508160800151600381518110610973577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001018190525090565b61098961163b565b610991611655565b8360000151816000600381106109d0577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002018181525050836020015181600160038110610a18577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020020181815250508281600260038110610a5c577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002018181525050600060608360808460076107d05a03fa90508060008114610a8557610a87565bfe5b5080610a9257600080fd5b505092915050565b610aa261163b565b610aaa611677565b836000015181600060048110610ae9577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002018181525050836020015181600160048110610b31577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002018181525050826000015181600260048110610b79577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002018181525050826020015181600360048110610bc1577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002018181525050600060608360c08460066107d05a03fa90508060008114610bea57610bec565bfe5b5080610bf757600080fd5b505092915050565b610c0761163b565b60007f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47905060008360000151148015610c44575060008360200151145b15610c68576040518060400160405280600081526020016000815250915050610c9f565b604051806040016040528084600001518152602001828560200151610c8d9190611b4d565b83610c989190611aba565b8152509150505b919050565b600080600467ffffffffffffffff811115610ce8577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051908082528060200260200182016040528015610d2157816020015b610d0e61163b565b815260200190600190039081610d065790505b5090506000600467ffffffffffffffff811115610d67577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051908082528060200260200182016040528015610da057816020015b610d8d611699565b815260200190600190039081610d855790505b5090508a82600081518110610dde577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101819052508882600181518110610e24577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101819052508682600281518110610e6a577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101819052508482600381518110610eb0577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101819052508981600081518110610ef6577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101819052508781600181518110610f3c577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101819052508581600281518110610f82577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101819052508381600381518110610fc8577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010181905250610fdd8282610fed565b9250505098975050505050505050565b60008151835114610ffd57600080fd5b60008351905060006006826110129190611a60565b905060008167ffffffffffffffff811115611056577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280602002602001820160405280156110845781602001602082028036833780820191505090505b50905060005b83811015611569578681815181106110cb577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151600001518260006006846110e79190611a60565b6110f19190611a0a565b81518110611128577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101818152505086818151811061116d577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151602001518260016006846111899190611a60565b6111939190611a0a565b815181106111ca577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101818152505085818151811061120f577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015160000151600160028110611254577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200201518260026006846112699190611a60565b6112739190611a0a565b815181106112aa577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010181815250508581815181106112ef577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015160000151600060028110611334577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200201518260036006846113499190611a60565b6113539190611a0a565b8151811061138a577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010181815250508581815181106113cf577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015160200151600160028110611414577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200201518260046006846114299190611a60565b6114339190611a0a565b8151811061146a577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010181815250508581815181106114af577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151602001516000600281106114f4577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200201518260056006846115099190611a60565b6115139190611a0a565b8151811061154a577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001018181525050808061156190611b04565b91505061108a565b506115726116bf565b6000602082602086026020860160086107d05a03fa9050806000811461159757611599565bfe5b50806115a457600080fd5b6000826000600181106115e0577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002015114159550505050505092915050565b6040518060a0016040528061160761163b565b8152602001611614611699565b8152602001611621611699565b815260200161162e611699565b8152602001606081525090565b604051806040016040528060008152602001600081525090565b6040518060600160405280600390602082028036833780820191505090505090565b6040518060800160405280600490602082028036833780820191505090505090565b60405180604001604052806116ac6116e1565b81526020016116b96116e1565b81525090565b6040518060200160405280600190602082028036833780820191505090505090565b6040518060400160405280600290602082028036833780820191505090505090565b6000611716611711846119be565b61198d565b9050808285602086028201111561172c57600080fd5b60005b8581101561175c57816117428882611910565b84526020840193506020830192505060018101905061172f565b5050509392505050565b6000611779611774846119e4565b61198d565b9050808285602086028201111561178f57600080fd5b60005b858110156117bf57816117a58882611910565b845260208401935060208301925050600181019050611792565b5050509392505050565b600082601f8301126117da57600080fd5b60026117e7848285611703565b91505092915050565b600082601f83011261180157600080fd5b600361180e848285611766565b91505092915050565b60006040828403121561182957600080fd5b611833604061198d565b9050600061184384828501611910565b600083015250602061185784828501611910565b60208301525092915050565b60006080828403121561187557600080fd5b61187f604061198d565b9050600061188f848285016117c9565b60008301525060406118a3848285016117c9565b60208301525092915050565b600061010082840312156118c257600080fd5b6118cc606061198d565b905060006118dc84828501611817565b60008301525060406118f084828501611863565b60208301525060c061190484828501611817565b60408301525092915050565b60008135905061191f81611c0b565b92915050565b600080610160838503121561193957600080fd5b6000611947858286016118af565b925050610100611959858286016117f0565b9150509250929050565b61196c81611aee565b82525050565b60006020820190506119876000830184611963565b92915050565b6000604051905081810181811067ffffffffffffffff821117156119b4576119b3611bdc565b5b8060405250919050565b600067ffffffffffffffff8211156119d9576119d8611bdc565b5b602082029050919050565b600067ffffffffffffffff8211156119ff576119fe611bdc565b5b602082029050919050565b6000611a1582611afa565b9150611a2083611afa565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611a5557611a54611b7e565b5b828201905092915050565b6000611a6b82611afa565b9150611a7683611afa565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611aaf57611aae611b7e565b5b828202905092915050565b6000611ac582611afa565b9150611ad083611afa565b925082821015611ae357611ae2611b7e565b5b828203905092915050565b60008115159050919050565b6000819050919050565b6000611b0f82611afa565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611b4257611b41611b7e565b5b600182019050919050565b6000611b5882611afa565b9150611b6383611afa565b925082611b7357611b72611bad565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611c1481611afa565b8114611c1f57600080fd5b5056fea26469706673582212201e85adda3387371cc5345140248b5be4dc8e32b1579e522eed1500a9fbe59bd464736f6c63430008000033";

export class DepositVerifierContract__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<DepositVerifierContract> {
    return super.deploy(overrides || {}) as Promise<DepositVerifierContract>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): DepositVerifierContract {
    return super.attach(address) as DepositVerifierContract;
  }
  connect(signer: Signer): DepositVerifierContract__factory {
    return super.connect(signer) as DepositVerifierContract__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DepositVerifierContractInterface {
    return new utils.Interface(_abi) as DepositVerifierContractInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DepositVerifierContract {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as DepositVerifierContract;
  }
}
