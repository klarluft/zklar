/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TransactionVerifierContract,
  TransactionVerifierContractInterface,
} from "../TransactionVerifierContract";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "X",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "Y",
                type: "uint256",
              },
            ],
            internalType: "struct Pairing.G1Point",
            name: "a",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256[2]",
                name: "X",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2]",
                name: "Y",
                type: "uint256[2]",
              },
            ],
            internalType: "struct Pairing.G2Point",
            name: "b",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "X",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "Y",
                type: "uint256",
              },
            ],
            internalType: "struct Pairing.G1Point",
            name: "c",
            type: "tuple",
          },
        ],
        internalType: "struct TransactionVerifierContract.Proof",
        name: "proof",
        type: "tuple",
      },
      {
        internalType: "uint256[5]",
        name: "input",
        type: "uint256[5]",
      },
    ],
    name: "verifyTx",
    outputs: [
      {
        internalType: "bool",
        name: "r",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611d93806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063bcb9988614610030575b600080fd5b61004a60048036038101906100459190611a60565b610060565b6040516100579190611aad565b60405180910390f35b600080600567ffffffffffffffff8111156100a4577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280602002602001820160405280156100d25781602001602082028036833780820191505090505b50905060005b60058110156101775783816005811061011a577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020020151828281518110610158577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001018181525050808061016f90611c3f565b9150506100d8565b50600061018482866101a0565b141561019457600191505061019a565b60009150505b92915050565b6000807f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001905060006101d06103cf565b9050806080015151600186516101e69190611b45565b146101f057600080fd5b60006040518060400160405280600081526020016000815250905060005b865181101561031b5783878281518110610251577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101511061026357600080fd5b61030682610301856080015160018561027c9190611b45565b815181106102b3577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101518a85815181106102f4577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151610abc565b610bd5565b9150808061031390611c3f565b91505061020e565b5061036b81836080015160008151811061035e577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151610bd5565b90506103b18560000151866020015161038384610d3a565b85604001516103958a60400151610d3a565b87606001516103a78960000151610d3a565b8960200151610ddf565b6103c157600193505050506103c9565b600093505050505b92915050565b6103d761172f565b60405180604001604052807f28b728f26f9d721c923817f5ae9fd186e0c92c712420fcded92bd514b2132ec881526020017f0485ab58e6bbd846aa3ae4af42f8a731b8a381199d72aca4cacffca5e98c09418152508160000181905250604051806040016040528060405180604001604052807f1899badc7bf1439c67e579bb847b9f0c4d8eac635506b9e651de050cbff8b31081526020017e1f9349a3e22a4d991669736acd71175d169bed4abf10c18b37fcdfc9aefa39815250815260200160405180604001604052807f0170c552e90f8bcf486b8fe43f66571695ebcb3745ba8dc49a01160a2b60cfae81526020017f2b07184f4e58abe621a0bd8d4f9d16ab3312d54cc1b39f815d10c6d6818338278152508152508160200181905250604051806040016040528060405180604001604052807f2c61bc0a3722f31705c922a3784268f6877a00536119c8d411806b40d9e13b6181526020017f1ca4a458ff6d175e71f6ce19c04110b2a7f68fd91451cd895e28715f651628eb815250815260200160405180604001604052807f24f7f5a5e32f919636ea5d580bc8d160d7252d49802e61ce4c6d6714304c6c6a81526020017f1c65aac94b462662856ea65b3f4edc356dc3510d562e5d5dd9f437251764d4e68152508152508160400181905250604051806040016040528060405180604001604052807f22b9e1a31081f9336aec958e199d32786ecca6f09ae66bea867bc688fcd9c18181526020017f1a3b11f22bf3dd985bf9db2c995cf8dee746c19a1cdc00842ceb168626a1e8ac815250815260200160405180604001604052807f2ef272fede31e6b8cf48a275671933b4abde7cc5f7b7f50cf7ddff116eeea3e781526020017f1b159be538913793675e09c5f7f3c43977d50c0a11447711965f1fd51400086f8152508152508160600181905250600667ffffffffffffffff8111156106c3577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280602002602001820160405280156106fc57816020015b6106e9611776565b8152602001906001900390816106e15790505b50816080018190525060405180604001604052807f29b0f684d2c2f539b866a3fab09a79b652095217e6eeec45eeba259bd58c5a0381526020017f10aeebb3e5abefa92099c443f3c5e4cfa37438f26b489199338ab62ff689c5758152508160800151600081518110610798577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001018190525060405180604001604052807f1f7747fe1691eea5a809b41e6408c0c890163778fca4bda3fb54620486bfdba981526020017f18dc0e6af8e2ad03778bc162c29831b1c2f21fd199ed6015817cf6e2dd1fed3b8152508160800151600181518110610836577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001018190525060405180604001604052807f0398077610b905f1de19328c1f276428e1a456a5bddd8a5170b374fb85fee94e81526020017f08c7e4446a1575f387c7608aee530198586a43c2a68e84044d6255fee2e6445e81525081608001516002815181106108d4577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001018190525060405180604001604052807f13f3eaf7860049e56f95c8dd58fd025050d831e8e574f2386a0b2ab76780b48581526020017f2998dcab37f5373f27b78a83fd8bb221b764ae0c60afe704698f4bc40d2c946a8152508160800151600381518110610972577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001018190525060405180604001604052807f24840dce27d6730e88c78f5fbcdd7fe9506efced6a844b78b10bbedb4c5bd1ff81526020017f13863c0d9c7163ea1e256fa41b2276ef525176e665d9b9650882be8c8b62d0328152508160800151600481518110610a10577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001018190525060405180604001604052807f1c6e51f011d1b0047f9be370de19db3f1bccd3b81b5be753d49bcc587500ae7b81526020017f28e52fe9131ea90fbc94e450a24225f84abbbb101b414a52640c013ac864d4588152508160800151600581518110610aae577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001018190525090565b610ac4611776565b610acc611790565b836000015181600060038110610b0b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002018181525050836020015181600160038110610b53577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020020181815250508281600260038110610b97577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002018181525050600060608360808460076107d05a03fa90508060008114610bc057610bc2565bfe5b5080610bcd57600080fd5b505092915050565b610bdd611776565b610be56117b2565b836000015181600060048110610c24577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002018181525050836020015181600160048110610c6c577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002018181525050826000015181600260048110610cb4577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002018181525050826020015181600360048110610cfc577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002018181525050600060608360c08460066107d05a03fa90508060008114610d2557610d27565bfe5b5080610d3257600080fd5b505092915050565b610d42611776565b60007f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47905060008360000151148015610d7f575060008360200151145b15610da3576040518060400160405280600081526020016000815250915050610dda565b604051806040016040528084600001518152602001828560200151610dc89190611c88565b83610dd39190611bf5565b8152509150505b919050565b600080600467ffffffffffffffff811115610e23577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051908082528060200260200182016040528015610e5c57816020015b610e49611776565b815260200190600190039081610e415790505b5090506000600467ffffffffffffffff811115610ea2577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051908082528060200260200182016040528015610edb57816020015b610ec86117d4565b815260200190600190039081610ec05790505b5090508a82600081518110610f19577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101819052508882600181518110610f5f577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101819052508682600281518110610fa5577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101819052508482600381518110610feb577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101819052508981600081518110611031577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101819052508781600181518110611077577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001018190525085816002815181106110bd577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101819052508381600381518110611103577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101819052506111188282611128565b9250505098975050505050505050565b6000815183511461113857600080fd5b600083519050600060068261114d9190611b9b565b905060008167ffffffffffffffff811115611191577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280602002602001820160405280156111bf5781602001602082028036833780820191505090505b50905060005b838110156116a457868181518110611206577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151600001518260006006846112229190611b9b565b61122c9190611b45565b81518110611263577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010181815250508681815181106112a8577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151602001518260016006846112c49190611b9b565b6112ce9190611b45565b81518110611305577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101818152505085818151811061134a577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101516000015160016002811061138f577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200201518260026006846113a49190611b9b565b6113ae9190611b45565b815181106113e5577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101818152505085818151811061142a577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101516000015160006002811061146f577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200201518260036006846114849190611b9b565b61148e9190611b45565b815181106114c5577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101818152505085818151811061150a577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101516020015160016002811061154f577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200201518260046006846115649190611b9b565b61156e9190611b45565b815181106115a5577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010181815250508581815181106115ea577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101516020015160006002811061162f577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200201518260056006846116449190611b9b565b61164e9190611b45565b81518110611685577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001018181525050808061169c90611c3f565b9150506111c5565b506116ad6117fa565b6000602082602086026020860160086107d05a03fa905080600081146116d2576116d4565bfe5b50806116df57600080fd5b60008260006001811061171b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002015114159550505050505092915050565b6040518060a00160405280611742611776565b815260200161174f6117d4565b815260200161175c6117d4565b81526020016117696117d4565b8152602001606081525090565b604051806040016040528060008152602001600081525090565b6040518060600160405280600390602082028036833780820191505090505090565b6040518060800160405280600490602082028036833780820191505090505090565b60405180604001604052806117e761181c565b81526020016117f461181c565b81525090565b6040518060200160405280600190602082028036833780820191505090505090565b6040518060400160405280600290602082028036833780820191505090505090565b600061185161184c84611af9565b611ac8565b9050808285602086028201111561186757600080fd5b60005b85811015611897578161187d8882611a4b565b84526020840193506020830192505060018101905061186a565b5050509392505050565b60006118b46118af84611b1f565b611ac8565b905080828560208602820111156118ca57600080fd5b60005b858110156118fa57816118e08882611a4b565b8452602084019350602083019250506001810190506118cd565b5050509392505050565b600082601f83011261191557600080fd5b600261192284828561183e565b91505092915050565b600082601f83011261193c57600080fd5b60056119498482856118a1565b91505092915050565b60006040828403121561196457600080fd5b61196e6040611ac8565b9050600061197e84828501611a4b565b600083015250602061199284828501611a4b565b60208301525092915050565b6000608082840312156119b057600080fd5b6119ba6040611ac8565b905060006119ca84828501611904565b60008301525060406119de84828501611904565b60208301525092915050565b600061010082840312156119fd57600080fd5b611a076060611ac8565b90506000611a1784828501611952565b6000830152506040611a2b8482850161199e565b60208301525060c0611a3f84828501611952565b60408301525092915050565b600081359050611a5a81611d46565b92915050565b6000806101a08385031215611a7457600080fd5b6000611a82858286016119ea565b925050610100611a948582860161192b565b9150509250929050565b611aa781611c29565b82525050565b6000602082019050611ac26000830184611a9e565b92915050565b6000604051905081810181811067ffffffffffffffff82111715611aef57611aee611d17565b5b8060405250919050565b600067ffffffffffffffff821115611b1457611b13611d17565b5b602082029050919050565b600067ffffffffffffffff821115611b3a57611b39611d17565b5b602082029050919050565b6000611b5082611c35565b9150611b5b83611c35565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611b9057611b8f611cb9565b5b828201905092915050565b6000611ba682611c35565b9150611bb183611c35565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611bea57611be9611cb9565b5b828202905092915050565b6000611c0082611c35565b9150611c0b83611c35565b925082821015611c1e57611c1d611cb9565b5b828203905092915050565b60008115159050919050565b6000819050919050565b6000611c4a82611c35565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611c7d57611c7c611cb9565b5b600182019050919050565b6000611c9382611c35565b9150611c9e83611c35565b925082611cae57611cad611ce8565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611d4f81611c35565b8114611d5a57600080fd5b5056fea26469706673582212207afce77a47e8229820421730d325b8749deccc5bc8e0d060483e9d987e63e38764736f6c63430008000033";

export class TransactionVerifierContract__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TransactionVerifierContract> {
    return super.deploy(
      overrides || {}
    ) as Promise<TransactionVerifierContract>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TransactionVerifierContract {
    return super.attach(address) as TransactionVerifierContract;
  }
  connect(signer: Signer): TransactionVerifierContract__factory {
    return super.connect(signer) as TransactionVerifierContract__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TransactionVerifierContractInterface {
    return new utils.Interface(_abi) as TransactionVerifierContractInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TransactionVerifierContract {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TransactionVerifierContract;
  }
}
