/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ZKlarContract, ZKlarContractInterface } from "../ZKlarContract";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_transactionVerifierContractAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_newRootDigestVerifierContractAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "currentIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "newRootDigestVerifierContractAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "nullifiers",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rootDigest",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "rootDigests",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_nullifier",
        type: "uint256",
      },
    ],
    name: "setNullifier",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_rootDigest",
        type: "uint256",
      },
    ],
    name: "setRootDigest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "newCommitment0Digest",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "newCommitment0RootDigest",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "newCommitment1Digest",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "newCommitment1RootDigest",
            type: "uint256",
          },
        ],
        internalType: "struct ZKlarContract.TransactionNewDigests",
        name: "_transactionNewDigests",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256[2]",
            name: "a",
            type: "uint256[2]",
          },
          {
            internalType: "uint256[2][2]",
            name: "b",
            type: "uint256[2][2]",
          },
          {
            internalType: "uint256[2]",
            name: "c",
            type: "uint256[2]",
          },
        ],
        internalType: "struct ZKlarContract.Proof",
        name: "_transactionProof",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "rootDigest",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "commitment0Nullifier",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "commitment1Nullifier",
            type: "uint256",
          },
        ],
        internalType: "struct ZKlarContract.TransactionProofInputs",
        name: "_transactionProofInputs",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256[2]",
            name: "a",
            type: "uint256[2]",
          },
          {
            internalType: "uint256[2][2]",
            name: "b",
            type: "uint256[2][2]",
          },
          {
            internalType: "uint256[2]",
            name: "c",
            type: "uint256[2]",
          },
        ],
        internalType: "struct ZKlarContract.Proof",
        name: "_newRootDigestProof0",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256[2]",
            name: "a",
            type: "uint256[2]",
          },
          {
            internalType: "uint256[2][2]",
            name: "b",
            type: "uint256[2][2]",
          },
          {
            internalType: "uint256[2]",
            name: "c",
            type: "uint256[2]",
          },
        ],
        internalType: "struct ZKlarContract.Proof",
        name: "_newRootDigestProof1",
        type: "tuple",
      },
    ],
    name: "transact",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "transactionVerifierContractAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200144c3803806200144c833981810160405281019062000037919062000113565b60008081905550600060018190555060016002600080815260200190815260200160002060006101000a81548160ff02191690831515021790555081600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050620001a2565b6000815190506200010d8162000188565b92915050565b600080604083850312156200012757600080fd5b60006200013785828601620000fc565b92505060206200014a85828601620000fc565b9150509250929050565b6000620001618262000168565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b620001938162000154565b81146200019f57600080fd5b50565b61129a80620001b26000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80639b1c183b116100665780639b1c183b14610120578063aa7e13381461013c578063bc6ab72a1461015a578063c1624da614610178578063d21e82ab1461019457610093565b806313cecd9c1461009857806326987b60146100c857806354490229146100e657806376b4b94514610102575b600080fd5b6100b260048036038101906100ad9190610bc5565b6101c4565b6040516100bf9190610fe4565b60405180910390f35b6100d06101e4565b6040516100dd91906110bf565b60405180910390f35b61010060048036038101906100fb9190610bc5565b6101ea565b005b61010a610219565b60405161011791906110bf565b60405180910390f35b61013a60048036038101906101359190610bc5565b61021f565b005b610144610260565b6040516101519190610f82565b60405180910390f35b610162610286565b60405161016f9190610f82565b60405180910390f35b610192600480360381019061018d9190610b4a565b6102ac565b005b6101ae60048036038101906101a99190610bc5565b610898565b6040516101bb9190610fe4565b60405180910390f35b60026020528060005260406000206000915054906101000a900460ff1681565b60015481565b60016005600083815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b60005481565b8060008190555060016002600083815260200190815260200160002060006101000a81548160ff021916908315150217905550600180540160018190555050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60011515600260008560000151815260200190815260200160002060009054906101000a900460ff16151514610317576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030e9061103f565b60405180910390fd5b60001515600560008560200151815260200190815260200160002060009054906101000a900460ff16151514610382576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103799061109f565b60405180910390fd5b60001515600560008560400151815260200190815260200160002060009054906101000a900460ff161515146103ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103e49061105f565b60405180910390fd5b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506104436108b8565b6040518060c0016040528060018152602001876000015181526020018760200151815260200187604001518152602001896000015181526020018960400151815250905060008373ffffffffffffffffffffffffffffffffffffffff1663f398789b89600001518a602001518b60400151866040518563ffffffff1660e01b81526004016104d49493929190610f9d565b60206040518083038186803b1580156104ec57600080fd5b505afa158015610500573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105249190610b21565b905080610566576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161055d9061107f565b60405180910390fd5b61056e6108b8565b6040518060c00160405280600181526020016000548152602001600081526020018b6020015181526020018b600001518152602001600154815250905060008473ffffffffffffffffffffffffffffffffffffffff1663f398789b89600001518a602001518b60400151866040518563ffffffff1660e01b81526004016105f89493929190610f9d565b60206040518083038186803b15801561061057600080fd5b505afa158015610624573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106489190610b21565b90508061068a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106819061101f565b60405180910390fd5b6106926108b8565b6040518060c00160405280600181526020018d602001518152602001600081526020018d6060015181526020018d6040015181526020016001805401815250905060008673ffffffffffffffffffffffffffffffffffffffff1663f398789b8a600001518b602001518c60400151866040518563ffffffff1660e01b81526004016107209493929190610f9d565b60206040518083038186803b15801561073857600080fd5b505afa15801561074c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107709190610b21565b9050806107b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107a990610fff565b60405180910390fd5b8c606001516000819055506002600154016001819055506001600260008f60200151815260200190815260200160002060006101000a81548160ff0219169083151502179055506001600260008f60600151815260200190815260200160002060006101000a81548160ff0219169083151502179055506001600560008d60200151815260200190815260200160002060006101000a81548160ff0219169083151502179055506001600560008d60400151815260200190815260200160002060006101000a81548160ff02191690831515021790555050505050505050505050505050565b60056020528060005260406000206000915054906101000a900460ff1681565b6040518060c00160405280600690602082028036833780820191505090505090565b600082601f8301126108eb57600080fd5b60026108fe6108f982611107565b6110da565b9150818385604084028201111561091457600080fd5b60005b83811015610944578161092a888261094e565b845260208401935060408301925050600181019050610917565b5050505092915050565b600082601f83011261095f57600080fd5b600261097261096d82611129565b6110da565b9150818385602084028201111561098857600080fd5b60005b838110156109b8578161099e8882610b0c565b84526020840193506020830192505060018101905061098b565b5050505092915050565b6000815190506109d181611236565b92915050565b600061010082840312156109ea57600080fd5b6109f460606110da565b90506000610a048482850161094e565b6000830152506040610a18848285016108da565b60208301525060c0610a2c8482850161094e565b60408301525092915050565b600060808284031215610a4a57600080fd5b610a5460806110da565b90506000610a6484828501610b0c565b6000830152506020610a7884828501610b0c565b6020830152506040610a8c84828501610b0c565b6040830152506060610aa084828501610b0c565b60608301525092915050565b600060608284031215610abe57600080fd5b610ac860606110da565b90506000610ad884828501610b0c565b6000830152506020610aec84828501610b0c565b6020830152506040610b0084828501610b0c565b60408301525092915050565b600081359050610b1b8161124d565b92915050565b600060208284031215610b3357600080fd5b6000610b41848285016109c2565b91505092915050565b60008060008060006103e08688031215610b6357600080fd5b6000610b7188828901610a38565b9550506080610b82888289016109d7565b945050610180610b9488828901610aac565b9350506101e0610ba6888289016109d7565b9250506102e0610bb8888289016109d7565b9150509295509295909350565b600060208284031215610bd757600080fd5b6000610be584828501610b0c565b91505092915050565b6000610bfa8383610c84565b60408301905092915050565b6000610c128383610f64565b60208301905092915050565b610c27816111ee565b82525050565b610c3681611169565b610c4081846111b1565b9250610c4b8261114b565b8060005b83811015610c7c578151610c638782610bee565b9650610c6e8361118a565b925050600181019050610c4f565b505050505050565b610c8d81611174565b610c9781846111bc565b9250610ca282611155565b8060005b83811015610cd3578151610cba8782610c06565b9650610cc583611197565b925050600181019050610ca6565b505050505050565b610ce481611174565b610cee81846111c7565b9250610cf982611155565b8060005b83811015610d2a578151610d118782610c06565b9650610d1c83611197565b925050600181019050610cfd565b505050505050565b610d3b8161117f565b610d4581846111d2565b9250610d508261115f565b8060005b83811015610d81578151610d688782610c06565b9650610d73836111a4565b925050600181019050610d54565b505050505050565b610d9281611200565b82525050565b6000610da5601f836111dd565b91507f496e76616c6964206e657720726f6f742064696765737420312070726f6f66006000830152602082019050919050565b6000610de5601f836111dd565b91507f496e76616c6964206e657720726f6f742064696765737420302070726f6f66006000830152602082019050919050565b6000610e256013836111dd565b91507f496e76616c696420726f6f7420646967657374000000000000000000000000006000830152602082019050919050565b6000610e656029836111dd565b91507f4e756c6c696669657220666f7220636f6d6d69746d656e74203120616c72656160008301527f64792065786973747300000000000000000000000000000000000000000000006020830152604082019050919050565b6000610ecb6019836111dd565b91507f496e76616c6964207472616e73616374696f6e2070726f6f66000000000000006000830152602082019050919050565b6000610f0b6029836111dd565b91507f4e756c6c696669657220666f7220636f6d6d69746d656e74203020616c72656160008301527f64792065786973747300000000000000000000000000000000000000000000006020830152604082019050919050565b610f6d8161122c565b82525050565b610f7c8161122c565b82525050565b6000602082019050610f976000830184610c1e565b92915050565b60006101c082019050610fb36000830187610cdb565b610fc06040830186610c2d565b610fcd60c0830185610cdb565b610fdb610100830184610d32565b95945050505050565b6000602082019050610ff96000830184610d89565b92915050565b6000602082019050818103600083015261101881610d98565b9050919050565b6000602082019050818103600083015261103881610dd8565b9050919050565b6000602082019050818103600083015261105881610e18565b9050919050565b6000602082019050818103600083015261107881610e58565b9050919050565b6000602082019050818103600083015261109881610ebe565b9050919050565b600060208201905081810360008301526110b881610efe565b9050919050565b60006020820190506110d46000830184610f73565b92915050565b6000604051905081810181811067ffffffffffffffff821117156110fd57600080fd5b8060405250919050565b600067ffffffffffffffff82111561111e57600080fd5b602082029050919050565b600067ffffffffffffffff82111561114057600080fd5b602082029050919050565b6000819050919050565b6000819050919050565b6000819050919050565b600060029050919050565b600060029050919050565b600060069050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b600081905092915050565b600081905092915050565b600081905092915050565b600081905092915050565b600082825260208201905092915050565b60006111f98261120c565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b61123f81611200565b811461124a57600080fd5b50565b6112568161122c565b811461126157600080fd5b5056fea264697066735822122042bc5a1a5524f9365cef3c001e0f6cebd47eaf5389e2e8121b3689b6cbe1f2e664736f6c634300060b0033";

export class ZKlarContract__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _transactionVerifierContractAddress: string,
    _newRootDigestVerifierContractAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ZKlarContract> {
    return super.deploy(
      _transactionVerifierContractAddress,
      _newRootDigestVerifierContractAddress,
      overrides || {}
    ) as Promise<ZKlarContract>;
  }
  getDeployTransaction(
    _transactionVerifierContractAddress: string,
    _newRootDigestVerifierContractAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _transactionVerifierContractAddress,
      _newRootDigestVerifierContractAddress,
      overrides || {}
    );
  }
  attach(address: string): ZKlarContract {
    return super.attach(address) as ZKlarContract;
  }
  connect(signer: Signer): ZKlarContract__factory {
    return super.connect(signer) as ZKlarContract__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ZKlarContractInterface {
    return new utils.Interface(_abi) as ZKlarContractInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ZKlarContract {
    return new Contract(address, _abi, signerOrProvider) as ZKlarContract;
  }
}
