/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ZKlarContract, ZKlarContractInterface } from "../ZKlarContract";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_depositVerifierContractAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_transactionVerifierContractAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_newRootDigestVerifierContractAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "commitmentDigest",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    inputs: [],
    name: "currentIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256[2]",
            name: "a",
            type: "uint256[2]",
          },
          {
            internalType: "uint256[2][2]",
            name: "b",
            type: "uint256[2][2]",
          },
          {
            internalType: "uint256[2]",
            name: "c",
            type: "uint256[2]",
          },
        ],
        internalType: "struct ZKlarContract.Proof",
        name: "_depositProof",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_commitmentDigest",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "depositVerifierContractAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256[2]",
                name: "a",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2][2]",
                name: "b",
                type: "uint256[2][2]",
              },
              {
                internalType: "uint256[2]",
                name: "c",
                type: "uint256[2]",
              },
            ],
            internalType: "struct ZKlarContract.Proof",
            name: "newRootDigestProof",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "newRootDigest",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "commitmentDigest",
            type: "uint256",
          },
        ],
        internalType: "struct ZKlarContract.PendingDepositFullfilment[]",
        name: "_pendingDepositFullfilments",
        type: "tuple[]",
      },
    ],
    name: "fullfilPendingDeposits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "newRootDigestVerifierContractAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "nullifiers",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "pendingDepositsBalances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rootDigest",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "rootDigests",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_nullifier",
        type: "uint256",
      },
    ],
    name: "setNullifier",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_commitmentDigest",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "setPendingDepositsBalances",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_rootDigest",
        type: "uint256",
      },
    ],
    name: "setRootDigest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "newCommitment0Digest",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "newCommitment0RootDigest",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "newCommitment1Digest",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "newCommitment1RootDigest",
            type: "uint256",
          },
        ],
        internalType: "struct ZKlarContract.TransactionNewDigests",
        name: "_transactionNewDigests",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256[2]",
            name: "a",
            type: "uint256[2]",
          },
          {
            internalType: "uint256[2][2]",
            name: "b",
            type: "uint256[2][2]",
          },
          {
            internalType: "uint256[2]",
            name: "c",
            type: "uint256[2]",
          },
        ],
        internalType: "struct ZKlarContract.Proof",
        name: "_transactionProof",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "rootDigest",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "commitment0Nullifier",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "commitment1Nullifier",
            type: "uint256",
          },
        ],
        internalType: "struct ZKlarContract.TransactionProofInputs",
        name: "_transactionProofInputs",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256[2]",
            name: "a",
            type: "uint256[2]",
          },
          {
            internalType: "uint256[2][2]",
            name: "b",
            type: "uint256[2][2]",
          },
          {
            internalType: "uint256[2]",
            name: "c",
            type: "uint256[2]",
          },
        ],
        internalType: "struct ZKlarContract.Proof",
        name: "_newRootDigestProof0",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256[2]",
            name: "a",
            type: "uint256[2]",
          },
          {
            internalType: "uint256[2][2]",
            name: "b",
            type: "uint256[2][2]",
          },
          {
            internalType: "uint256[2]",
            name: "c",
            type: "uint256[2]",
          },
        ],
        internalType: "struct ZKlarContract.Proof",
        name: "_newRootDigestProof1",
        type: "tuple",
      },
    ],
    name: "transact",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "transactionVerifierContractAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "";

export class ZKlarContract__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _depositVerifierContractAddress: string,
    _transactionVerifierContractAddress: string,
    _newRootDigestVerifierContractAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ZKlarContract> {
    return super.deploy(
      _depositVerifierContractAddress,
      _transactionVerifierContractAddress,
      _newRootDigestVerifierContractAddress,
      overrides || {}
    ) as Promise<ZKlarContract>;
  }
  getDeployTransaction(
    _depositVerifierContractAddress: string,
    _transactionVerifierContractAddress: string,
    _newRootDigestVerifierContractAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _depositVerifierContractAddress,
      _transactionVerifierContractAddress,
      _newRootDigestVerifierContractAddress,
      overrides || {}
    );
  }
  attach(address: string): ZKlarContract {
    return super.attach(address) as ZKlarContract;
  }
  connect(signer: Signer): ZKlarContract__factory {
    return super.connect(signer) as ZKlarContract__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ZKlarContractInterface {
    return new utils.Interface(_abi) as ZKlarContractInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ZKlarContract {
    return new Contract(address, _abi, signerOrProvider) as ZKlarContract;
  }
}
